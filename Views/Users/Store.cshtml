@model PetFinderAPI.Models.User
@{ ViewBag.Title = "Users"; }
@section css {
    <link rel="stylesheet" type="text/css" href="~/Content/css/select2.min.css">
    <link rel="stylesheet" type="text/css" href="~/Content/css//bootstrap-datetimepicker.min.css">

}
<div class="content">
    <div class="row">
        <div class="col-lg-8 offset-lg-2">
            <h4 class="page-title"> Add Users </h4>
            @if (ViewBag.message != "")
            {
<span class="badge badge-danger">@ViewBag.message</span>}
        </div>
    </div>
    <div class="row">
        <div class="col-lg-8 offset-lg-2">
            @using (Html.BeginForm("Store", "Users", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {

<div class="row">
    <div class="col-sm-6">
        <div class="form-group">
            <label>User Name <span class="text-danger">*</span></label>
            @*@Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })*@
            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", @required = "required" })

        </div>
    </div>

    <div class="col-sm-6">
        <div class="form-group">
            <label>Email <span class="text-danger">*</span></label>
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger", @type = "Email" })
        </div>
    </div>
    <div class="col-sm-6">
        <div class="form-group">
            <label>Password<span class="text-danger">*</span></label>
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
        </div>
    </div>
    @*<div class="col-sm-6">
            <div class="form-group">
                <label>Confirm Password<span class="text-danger">*</span></label>
                @Html.PasswordFor(m => m.Re_Password, new { @class = "form-control" })


            </div>
        </div>*@
    <div class="col-sm-6">
        <div class="form-group">
            <label>Date of Birth</label>
            <div class="cal-icon">
                @Html.TextBoxFor(m => m.DateOfBirth, new { @class = "form-control", @type = "date" })

            </div>
        </div>
    </div>
    <div class="col-sm-6">
        <div class="form-group gender-select">
            <label class="gen-label">Gender:</label>
            <div class="form-check-inline">
                <label class="form-check-label">
                    @Html.RadioButtonFor(m => m.Gender, "Male", new { Checked = "checked" }) Male
                </label>
            </div>
            <div class="form-check-inline">
                <label class="form-check-label">
                    @Html.RadioButtonFor(m => m.Gender, "Female")  Female
                </label>
            </div>

        </div>
    </div>
    <div class="col-sm-12">
        <div class="row">
            <div class="col-sm-12">
                <div class="form-group">
                    <label>Address</label>
                    @Html.TextBoxFor(m => m.Address, new { @class = "form-control" })

                </div>
            </div>

        </div>
    </div>
    <div class="col-sm-6">
        <div class="form-group">
            <label>Phone </label>
            @Html.TextBoxFor(m => m.Phone, new { @class = "form-control" })
        </div>
    </div>
    <div class="col-sm-6">
        <div class="form-group">
            <label>Avatar</label>
            <div class="profile-upload">
                <div class="upload-img">

                    <img id="avt" alt="" src="~/Content/img/user.jpg">
                </div>
                <div class="upload-input">
                    @Html.TextBoxFor(m => m.Avatar, new { @class = "form-control", @type = "file" })
                </div>
            </div>
        </div>
    </div>
</div>
                <div class="col-sm-6">
                    <div class="form-group">
                        <label class="display-block">Role</label>
                        @foreach (var item in @ViewBag.Roles)
                        {
        <div class="form-check form-check-inline">
            <label class="form-check-label" for="doctor_inactive">
                @Html.RadioButtonFor(model => model.RoleId, (int)item.Id) @Html.Label((string)item.Name)
            </label>
        </div>}
                    </div>
                </div>
                                <div class="form-group">
                                    <label class="display-block">Status</label>
                                    <div class="form-check form-check-inline">
                                        <label class="form-check-label" for="doctor_active">
                                            @Html.RadioButtonFor(m => m.IsActive, true, new { Checked = "checked" })  Active
                                        </label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <label class="form-check-label" for="doctor_inactive">
                                            @Html.RadioButtonFor(m => m.IsActive, false)     Inactive
                                        </label>
                                    </div>
                                </div>
                                                <div class="m-t-20 text-center">
                                                    <button type="submit" name="submit" value="Add User" class="btn btn-primary submit-btn">Create User</button>

                                                </div>}
        </div>
    </div>
    </di

    @section scripts {

        <script src="~/Scripts/select2.min.js"></script>
        <script src="~/Scripts/moment.min.js"></script>
        <script src="~/Scripts/bootstrap-datetimepicker.min.js"></script>
        <script>$(document).ready(function () {
                function readURL(input) {
                    if (input.files && input.files[0]) {
                        var reader = new FileReader();

                        reader.onload = function (e) {
                            $('#avt').attr('src', e.target.result);
                        }

                        reader.readAsDataURL(input.files[0]); // convert to base64 string
                    }
                }

                $("#Avatar").change(function () {
                    readURL(this);
                });
            });</script>
    }

